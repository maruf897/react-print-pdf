name: Build and Deploy .NET 8 Project to IIS with Zero Downtime

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Publish
      run: dotnet publish -c Release -o ./publish

    - name: Archive project files
      run: tar -czvf publish.tar.gz -C ./publish .

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: publish
        path: publish.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Set WinRM Password
      run: echo "WINRM_PASSWORD=${{ secrets.EC2_PASSWORD }}" >> $GITHUB_ENV

    - name: Determine target directory
      id: determine-directory
      shell: pwsh
      run: |
        $session = New-PSSession -ComputerName ${{ secrets.EC2_HOST }} -Credential (New-Object PSCredential('${{ secrets.EC2_USER }}', (ConvertTo-SecureString '${{ env.WINRM_PASSWORD }}' -AsPlainText -Force))) -Port ${{ secrets.EC2_PORT }} -UseSSL -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck)
        $targetDirectory = Invoke-Command -Session $session -ScriptBlock {
          if (Test-Path "C:\websites\zPax-Test-Portal-blue") {
            return "zPax-Test-Portal-green"
          } else {
            return "zPax-Test-Portal-blue"
          }
        }
        echo "target_directory=$targetDirectory" >> $GITHUB_ENV
        Remove-PSSession -Session $session

    - name: Extract files and configure IIS
      shell: pwsh
      run: |
        $session = New-PSSession -ComputerName ${{ secrets.EC2_HOST }} -Credential (New-Object PSCredential('${{ secrets.EC2_USER }}', (ConvertTo-SecureString '${{ env.WINRM_PASSWORD }}' -AsPlainText -Force))) -Port ${{ secrets.EC2_PORT }} -UseSSL -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck)
        Invoke-Command -Session $session -ScriptBlock {
          cd C:\websites\${{ env.target_directory }}
          tar -xzvf publish.tar.gz
          Remove-Item publish.tar.gz
          Import-Module WebAdministration
          if ((Get-WebSite -Name "zPax-Test-Portal").PhysicalPath -eq "C:\websites\zPax-Test-Portal-blue") {
            Set-ItemProperty "IIS:\Sites\zPax-Test-Portal" -name physicalPath -value "C:\websites\zPax-Test-Portal-green"
          } else {
            Set-ItemProperty "IIS:\Sites\zPax-Test-Portal" -name physicalPath -value "C:\websites\zPax-Test-Portal-blue"
          }
          Restart-WebAppPool -Name "zPax-Test-Portal"
        }
        Remove-PSSession -Session $session

    - name: Complete job
      run: echo "Deployment completed."
